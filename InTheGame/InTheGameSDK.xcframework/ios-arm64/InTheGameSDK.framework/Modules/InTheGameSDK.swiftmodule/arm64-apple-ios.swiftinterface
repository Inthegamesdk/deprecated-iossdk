// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios11.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name InTheGameSDK
import AVFoundation
import AVKit
import Foundation
@_exported import InTheGameSDK
import Swift
import UIKit
import WebKit
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ITGOverlayView : UIKit.UIView, WebKit.WKUIDelegate, WebKit.WKNavigationDelegate, UIKit.UIGestureRecognizerDelegate {
  public init(videoURL: Swift.String, broadcasterName: Swift.String? = nil, language: Swift.String = "en", devMode: Swift.Bool = false)
  public func setAspectRatio(_ ratio: CoreGraphics.CGFloat)
  public func videoPlaying()
  public func videoPaused()
  public func updateVideoTime(seconds: Swift.Double)
  public func hasContentAtPoint(_ point: CoreGraphics.CGPoint) -> Swift.Bool
  public func videoStopped()
  @objc override dynamic public func didMoveToWindow()
  @objc override dynamic public func point(inside point: CoreGraphics.CGPoint, with event: UIKit.UIEvent?) -> Swift.Bool
  @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationResponse: WebKit.WKNavigationResponse, decisionHandler: @escaping (WebKit.WKNavigationResponsePolicy) -> Swift.Void)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ITGPlayerView : UIKit.UIView, WebKit.WKUIDelegate, WebKit.WKNavigationDelegate, UIKit.UIGestureRecognizerDelegate {
  public class func instantiate(videoURL: Foundation.URL, broadcasterName: Swift.String? = nil, language: Swift.String = "en", allowsFullScreen: Swift.Bool = true, devMode: Swift.Bool = false) -> InTheGameSDK.ITGPlayerView
  @objc override dynamic public func awakeFromNib()
  @objc override dynamic public func layoutSubviews()
  @objc public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @objc override dynamic public func didMoveToWindow()
  public func disable()
  @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationResponse: WebKit.WKNavigationResponse, decisionHandler: @escaping (WebKit.WKNavigationResponsePolicy) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension ITGPlayerView : WebKit.WKScriptMessageHandler {
  @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
@objc @_inheritsConvenienceInitializers public class ITGPlayerViewController : UIKit.UIViewController {
  public var playerView: InTheGameSDK.ITGPlayerView?
  public class func instantiate(videoURL: Foundation.URL, broadcasterName: Swift.String? = nil, language: Swift.String = "en", devMode: Swift.Bool = false) -> InTheGameSDK.ITGPlayerViewController
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
